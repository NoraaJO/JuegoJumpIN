MessageNotUnderstood: UndefinedObject>>between:and:6 November 2024 3:50:00.879603 pmVM: Win32 - SmalltalkImage: Squeak6.0 [latest update: #22153]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir C:\TEC_S2_2024\Lenguajes\TareaFinal\Programas\JuegoJumpIN\smalltalkTrusted Dir C:\TEC_S2_2024\Lenguajes\TareaFinal\Programas\JuegoJumpIN\smalltalk\QUIROS CALVOUntrusted Dir C:\Users\QUIROS CALVO\OneDrive\Documentos\My SqueakUndefinedObject(Object)>>doesNotUnderstand: #between:and:	Receiver: nil	Arguments and temporary variables: 		aMessage: 	between: 1 and: 60		exception: 	MessageNotUnderstood: UndefinedObject>>between:and:		resumeValue: 	nil	Receiver's instance variables: nil[] in UndefinedObject>>DoIt	Receiver: nil	Arguments and temporary variables: 		ventana: 	a SystemWindow<JumpIn>(3063225)		colorBlanco1: 	(Color r: 0.848 g: 0.914 b: 0.949)		colorAzulClaro: 	nil		colorAzulOscuro: 	nil		cont_Menu: 	a Morph(2781744)		cont_Game: 	a Morph(3191896)		cont_Create: 	nil		cont_Help: 	nil		cont_About: 	nil		cont_Title: 	nil		text_Title: 	a StringMorph(3355408)'   JumpIn: Jugar'		text_About1: 	nil		text_About2: 	nil		text_About3: 	nil		text_About4: 	nil		text_About5: 	nil		text_About6: 	nil		text_About7: 	nil		text_About8: 	nil		btn_Play: 	nil		btn_Create: 	nil		btn_About: 	nil		btn_Help: 	nil		btn_BackGame: 	nil		btn_BackCreate: 	nil		btn_BackHelp: 	nil		btn_BackAbout: 	nil		gameController: 	nil		inputLevel: 	''		validNumber: 	false	Receiver's instance variables: nilEventHandler>>send:to:withEvent:fromMorph:	Receiver: an EventHandler; mouseUpSelector=value recipients: {[closure] in UndefinedObject>>DoIt}	Arguments and temporary variables: 		selector: 	#value		recipient: 	[closure] in UndefinedObject>>DoIt		event: 	[842@417 mouseUp ( red ) 528388984]		sourceMorph: 	a SimpleButtonMorph(1966568)		arity: 	0	Receiver's instance variables: 		mouseDownRecipient: 	nil		mouseDownSelector: 	nil		mouseMoveRecipient: 	nil		mouseMoveSelector: 	nil		mouseStillDownRecipient: 	nil		mouseStillDownSelector: 	nil		mouseUpRecipient: 	[closure] in UndefinedObject>>DoIt		mouseUpSelector: 	#value		mouseEnterRecipient: 	nil		mouseEnterSelector: 	nil		mouseLeaveRecipient: 	nil		mouseLeaveSelector: 	nil		mouseEnterDraggingRecipient: 	nil		mouseEnterDraggingSelector: 	nil		mouseLeaveDraggingRecipient: 	nil		mouseLeaveDraggingSelector: 	nil		mouseWheelRecipient: 	nil		mouseWheelSelector: 	nil		keyStrokeRecipient: 	nil		keyStrokeSelector: 	nil		keyUpRecipient: 	nil		keyUpSelector: 	nil		keyDownRecipient: 	nil		keyDownSelector: 	nil		valueParameter: 	nil		startDragRecipient: 	nil		startDragSelector: 	nil		doubleClickSelector: 	nil		doubleClickRecipient: 	nil		doubleClickTimeoutSelector: 	nil		doubleClickTimeoutRecipient: 	nil		clickSelector: 	nil		clickRecipient: 	nil		keyboardFocusChangeRecipient: 	nil		keyboardFocusChangeSelector: 	nil		wantsEveryMouseMove: 	nilEventHandler>>mouseUp:fromMorph:	Receiver: an EventHandler; mouseUpSelector=value recipients: {[closure] in UndefinedObject>>DoIt}	Arguments and temporary variables: 		event: 	[842@417 mouseUp ( red ) 528388984]		sourceMorph: 	a SimpleButtonMorph(1966568)	Receiver's instance variables: 		mouseDownRecipient: 	nil		mouseDownSelector: 	nil		mouseMoveRecipient: 	nil		mouseMoveSelector: 	nil		mouseStillDownRecipient: 	nil		mouseStillDownSelector: 	nil		mouseUpRecipient: 	[closure] in UndefinedObject>>DoIt		mouseUpSelector: 	#value		mouseEnterRecipient: 	nil		mouseEnterSelector: 	nil		mouseLeaveRecipient: 	nil		mouseLeaveSelector: 	nil		mouseEnterDraggingRecipient: 	nil		mouseEnterDraggingSelector: 	nil		mouseLeaveDraggingRecipient: 	nil		mouseLeaveDraggingSelector: 	nil		mouseWheelRecipient: 	nil		mouseWheelSelector: 	nil		keyStrokeRecipient: 	nil		keyStrokeSelector: 	nil		keyUpRecipient: 	nil		keyUpSelector: 	nil		keyDownRecipient: 	nil		keyDownSelector: 	nil		valueParameter: 	nil		startDragRecipient: 	nil		startDragSelector: 	nil		doubleClickSelector: 	nil		doubleClickRecipient: 	nil		doubleClickTimeoutSelector: 	nil		doubleClickTimeoutRecipient: 	nil		clickSelector: 	nil		clickRecipient: 	nil		keyboardFocusChangeRecipient: 	nil		keyboardFocusChangeSelector: 	nil		wantsEveryMouseMove: 	nilSimpleButtonMorph(Morph)>>mouseUp:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		evt: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226SimpleButtonMorph>>mouseUp:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		evt: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226SimpleButtonMorph(Morph)>>handleMouseUp:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		anEvent: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226MouseButtonEvent>>sentTo:	Receiver: [842@417 mouseUp ( red ) 528388984]	Arguments and temporary variables: 		anObject: 	a SimpleButtonMorph(1966568)	Receiver's instance variables: 		timeStamp: 	528388984		source: 	a HandMorph(333670)		type: 	#mouseUp		buttons: 	0		position: 	842@417		handler: 	nil		wasHandled: 	true		wasIgnored: 	false		whichButton: 	4		nClicks: 	1SimpleButtonMorph(Morph)>>handleEvent:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		anEvent: 	[842@417 mouseUp ( red ) 528388984]		filteredEvent: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226SimpleButtonMorph(Morph)>>handleFocusEvent:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		anEvent: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226MorphicEventDispatcher>>doHandlingForFocusEvent:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		currentEvent: 	[842@417 mouseUp ( red ) 528388984]		focusMorph: 	a SimpleButtonMorph(1966568)		localEvent: 	[842@417 mouseUp ( red ) 528388984]		filteredEvent: 	nil	Receiver's instance variables: 		lastType: 	nil		lastDispatch: 	nilMorphicEventDispatcher>>dispatchFocusEvent:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEventWithGlobalPosition: 	[842@417 mouseUp ( red ) 528388984]		focusMorph: 	a SimpleButtonMorph(1966568)		currentEvent: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		lastType: 	nil		lastDispatch: 	nilSimpleButtonMorph(Morph)>>processFocusEvent:using:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		anEvent: 	[842@417 mouseUp ( red ) 528388984]		defaultDispatcher: 	a MorphicEventDispatcher	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226SimpleButtonMorph(Morph)>>processFocusEvent:	Receiver: a SimpleButtonMorph(1966568)	Arguments and temporary variables: 		anEvent: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		bounds: 	715@400 corner: 965@430		owner: 	a Morph(2781744)		submorphs: 	{a StringMorph(3360180)'PLAY'}		fullBounds: 	715@400 corner: 965@430		color: 	(Color r: 0.585 g: 0.659 b: 0.775)		extension: 	a MorphExtension (2440405) [eventHandler = an EventHandler; mouseUpS...etc...		borderWidth: 	1		borderColor: 	Color gray		target: 	nil		actionSelector: 	#flash		arguments: 	#()		actWhen: 	#buttonUp		oldColor: 	(Color r: 0.169 g: 0.318 b: 0.549)		mouseDownTime: 	3908382587226[] in [] in [] in HandMorph>>sendFocusEvent:to:clear:	Receiver: a HandMorph(333670)	Arguments and temporary variables: 		anEvent: 	[842@417 mouseUp ( red ) 528388984]		focusHolder: 	a SimpleButtonMorph(1966568)		aBlock: 	[closure] in HandMorph>>sendMouseEvent:		w: 	a PasteUpMorph(2434915) [world]		result: 	nil	Receiver's instance variables: 		bounds: 	704@365 corner: 725@386		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	#()		fullBounds: 	704@365 corner: 725@386		color: 	Color blue		extension: 	a MorphExtension (2044395) [eventHandler = an EventHandler]  [other:...etc...		mouseFocus: 	nil		keyboardFocus: 	nil		eventListeners: 	nil		mouseListeners: 	nil		keyboardListeners: 	nil		eventCaptureFilters: 	nil		mouseCaptureFilters: 	nil		keyboardCaptureFilters: 	a WeakArray(a HandMorph(333670))		mouseClickState: 	nil		mouseOverHandler: 	a MouseOverHandler		targetOffset: 	10@14		lastMouseEvent: 	[704@365 mouseUp ( red ) 528402531]		lastKeyDownEvent: 	[836@420 keyDown (13) 528400359]		damageRecorder: 	a DamageRecorder		cacheCanvas: 	nil		cachedCanvasHasHoles: 	true		temporaryCursor: 	nil		temporaryCursorOffset: 	nil		hardwareCursor: 	nil		hasChanged: 	true		savedPatch: 	nil		userInitials: 	''		lastEventBuffer: 	#(1 528402531 704 365 0 0 1 1)		genieGestureProcessor: 	nil		keyboardInterpreter: 	an UTF32InputInterpreter		externalDropMorph: 	nil[] in ActiveEventVariable class(DynamicVariable class)>>value:during:	Receiver: ActiveEventVariable	Arguments and temporary variables: 		anObject: 	[842@417 mouseUp ( red ) 528388984]		aBlock: 	[closure] in [] in [] in HandMorph>>sendFocusEvent:to:clear:		p: 	a Process(41176) in nil		oldValue: 	nil		outerScopeWasDynamic: 	false	Receiver's instance variables: 		superclass: 	DynamicVariable		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#ActiveEventVariable		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Morphic-Worlds'		hash: 	253106856FullBlockClosure(BlockClosure)>>ensure:	Receiver: [closure] in ActiveEventVariable class(DynamicVariable class)>>value:during:	Arguments and temporary variables: 		aBlock: 	[closure] in ActiveEventVariable class(DynamicVariable class)>>value:during:...etc...		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	ActiveEventVariable class(DynamicVariable class)>>value:during:		startpcOrMethod: 	([] in DynamicVariable class>>#value:during: "a CompiledBlock(...etc...		numArgs: 	0		receiver: 	ActiveEventVariableActiveEventVariable class(DynamicVariable class)>>value:during:	Receiver: ActiveEventVariable	Arguments and temporary variables: 		anObject: 	[842@417 mouseUp ( red ) 528388984]		aBlock: 	[closure] in [] in [] in HandMorph>>sendFocusEvent:to:clear:		p: 	a Process(41176) in nil		oldValue: 	nil		outerScopeWasDynamic: 	false	Receiver's instance variables: 		superclass: 	DynamicVariable		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#ActiveEventVariable		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Morphic-Worlds'		hash: 	253106856[] in ActiveEventVariable class>>value:during:	Receiver: ActiveEventVariable	Arguments and temporary variables: 		anObject: 	[842@417 mouseUp ( red ) 528388984]		aBlock: 	[closure] in [] in [] in HandMorph>>sendFocusEvent:to:clear:		priorEvent: 	[842@417 mouseUp ( red ) 528388984]	Receiver's instance variables: 		superclass: 	DynamicVariable		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#ActiveEventVariable		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Morphic-Worlds'		hash: 	253106856--- The full stack ---UndefinedObject(Object)>>doesNotUnderstand: #between:and:[] in UndefinedObject>>DoItEventHandler>>send:to:withEvent:fromMorph:EventHandler>>mouseUp:fromMorph:SimpleButtonMorph(Morph)>>mouseUp:SimpleButtonMorph>>mouseUp:SimpleButtonMorph(Morph)>>handleMouseUp:MouseButtonEvent>>sentTo:SimpleButtonMorph(Morph)>>handleEvent:SimpleButtonMorph(Morph)>>handleFocusEvent:MorphicEventDispatcher>>doHandlingForFocusEvent:with:MorphicEventDispatcher>>dispatchFocusEvent:with:SimpleButtonMorph(Morph)>>processFocusEvent:using:SimpleButtonMorph(Morph)>>processFocusEvent:[] in [] in [] in HandMorph>>sendFocusEvent:to:clear:[] in ActiveEventVariable class(DynamicVariable class)>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveEventVariable class(DynamicVariable class)>>value:during:[] in ActiveEventVariable class>>value:during: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -FullBlockClosure(BlockClosure)>>ensure:ActiveEventVariable class>>value:during:MouseButtonEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendFocusEvent:to:clear:[] in ActiveHandVariable class(DynamicVariable class)>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveHandVariable class(DynamicVariable class)>>value:during:[] in ActiveHandVariable class>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveHandVariable class>>value:during:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendFocusEvent:to:clear:[] in ActiveWorldVariable class(DynamicVariable class)>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveWorldVariable class(DynamicVariable class)>>value:during:[] in ActiveWorldVariable class>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveWorldVariable class>>value:during:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in [] in WorldState>>doOneCycleNowFor:[] in ActiveHandVariable class(DynamicVariable class)>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveHandVariable class(DynamicVariable class)>>value:during:[] in ActiveHandVariable class>>value:during:FullBlockClosure(BlockClosure)>>ensure:ActiveHandVariable class>>value:during:HandMorph>>becomeActiveDuring:[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in MorphicProject>>spawnNewProcess[] in FullBlockClosure(BlockClosure)>>newProcess